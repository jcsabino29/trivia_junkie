[{"C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\index.js":"1","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\App.js":"2","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\Home\\Home.jsx":"3","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\Login\\Login.jsx":"4","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\Sign-Up\\Sign-Up.jsx":"5","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\User\\User.jsx":"6","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\List\\List.jsx":"7","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\Sign-Up\\styles.js":"8","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\services\\user.js":"9","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\Header\\Header.jsx":"10","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\api\\index.js":"11","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\http-common.js":"12","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\List\\styles.js":"13","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\Header\\styles.js":"14"},{"size":237,"mtime":1645658248068,"results":"15","hashOfConfig":"16"},{"size":1396,"mtime":1645921537365,"results":"17","hashOfConfig":"16"},{"size":3651,"mtime":1645140506288,"results":"18","hashOfConfig":"16"},{"size":2694,"mtime":1645921389692,"results":"19","hashOfConfig":"16"},{"size":4612,"mtime":1645665684933,"results":"20","hashOfConfig":"16"},{"size":1028,"mtime":1643596479984,"results":"21","hashOfConfig":"16"},{"size":5157,"mtime":1644436003997,"results":"22","hashOfConfig":"16"},{"size":272,"mtime":1644444971375,"results":"23","hashOfConfig":"16"},{"size":385,"mtime":1645664681115,"results":"24","hashOfConfig":"16"},{"size":568,"mtime":1645921503703,"results":"25","hashOfConfig":"16"},{"size":419,"mtime":1644435920183,"results":"26","hashOfConfig":"16"},{"size":183,"mtime":1645146497819,"results":"27","hashOfConfig":"16"},{"size":769,"mtime":1643512402076,"results":"28","hashOfConfig":"16"},{"size":1141,"mtime":1645145632099,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fdg2ku",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\index.js",[],[],"C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\App.js",["75","76","77","78","79","80"],[],"C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\Home\\Home.jsx",["81","82","83","84","85","86","87","88","89","90","91"],[],"import React, { useEffect, useState, useRef} from 'react';\r\nimport { CssBaseline, Grid, Button } from '@material-ui/core';\r\n\r\nimport Header from '../Header/Header';\r\nimport List from '../List/List.jsx';\r\nimport User from '../User/User.jsx';\r\n\r\nimport getTriviaData from '../../api';\r\n\r\nfunction shuffle(array) {\r\n    let temp_arr = [];\r\n    let indices = [0, 1, 2, 3]\r\n    let randomIndex = 0;\r\n    let i = 0;\r\n\r\n    //console.log(\"Actual array: \" + array);\r\n    while (indices.length != 0) {\r\n        randomIndex = (Math.floor(Math.random() * 100)) % indices.length;\r\n        temp_arr = temp_arr.concat(array[indices[randomIndex]]);\r\n        indices.splice(randomIndex, 1); //Remove the element\r\n        i++;\r\n    }\r\n\r\n    return temp_arr;\r\n}\r\n\r\nconst Home = () => {\r\n    const [category, setCategory] = useState('General Knowledge');\r\n    const [difficulty, setDifficulty] = useState('easy');\r\n    const [questions, setQuestions] = useState([]);\r\n    const [userAnswer, setUserAnswer] = useState('');\r\n    const [correct_answer, setCorrectAnswer] = useState('');\r\n    const [isCorrect, setIsCorrect] = useState('');\r\n    const [questionPoints, setQuestionPoints] = useState('');\r\n    const [userScore, setUserScore] = useState(1000);\r\n    const [choices, setChoices] = useState([]);\r\n    const [isGameOver, setGameOver]  = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const ref = useRef(null);\r\n\r\n    //User answer acts as a confirmation\r\n    useEffect(() => {\r\n        getTriviaData(category, difficulty).then((results) => {\r\n            //setGameOver(false);\r\n            setChoices(shuffle(results[0].incorrect_answers.concat(results[0].correct_answer)));\r\n            setQuestions(results);\r\n            setUserAnswer(userAnswer);\r\n            if (results[0].difficulty == 'easy') {\r\n                setQuestionPoints(100);\r\n            } else if (results[0].difficulty == 'medium') {\r\n                setQuestionPoints(300);\r\n            } else { \r\n                setQuestionPoints(500);\r\n            }\r\n\r\n            if (userScore <= 0) {\r\n                setGameOver(true);\r\n                if (isGameOver) {\r\n                    \r\n                } else {\r\n                    setUserScore(1000);\r\n                }\r\n            } else { console.log(\"USER SCORE NOT <= 0\"); }\r\n        })\r\n    }, [userAnswer, userScore, isGameOver]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Grid container spacing={3} style={{width: '100%'}}>\r\n                <Grid item xs={12} md={4} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center'}}> \r\n                    <User userScore={userScore} />\r\n                    </Grid>\r\n                        <Grid item xs={12} md={8} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center'}} ref={ref}> \r\n                            <List\r\n                                questions={questions}\r\n                                setUserAnswer={setUserAnswer}\r\n                                userAnswer={userAnswer}\r\n                                isCorrect={isCorrect}\r\n                                setIsCorrect={setIsCorrect}\r\n                                correct_answer={correct_answer}\r\n                                setCorrectAnswer={setCorrectAnswer}\r\n                                questionPoints={questionPoints}\r\n                                choices={choices}\r\n                                setUserScore={setUserScore}\r\n                                userScore={userScore}\r\n                            />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\Login\\Login.jsx",["92","93","94","95","96","97","98","99","100","101","102","103","104"],[],"C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\Sign-Up\\Sign-Up.jsx",["105","106","107","108","109","110","111","112","113"],[],"C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\User\\User.jsx",["114","115","116"],[],"import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport Card from 'react-bootstrap/Card';\r\nimport userImg from '../../img/Portrait_Placeholder.png';\r\n\r\nconst Score = ({userScore}) => {\r\n    return (\r\n        <Card style={{margin: 50, display: 'flex', justifyContent: 'center', width:'50%'}}>\r\n            <Card.Img variant=\"top\" src={userImg} />\r\n            <Card.Body>\r\n            <Card.Title>Pablo Sanchez</Card.Title>\r\n            <Card.Text>\r\n                <text style={{fontWeight: 'bold'}}> Total Points: </text> {(userScore.toString() == 'NaN' ? 0 : userScore)}\r\n                <Card.Text>\r\n                    <text style={{fontWeight: 'bold'}}> Level: </text> Beginner\r\n                </Card.Text>\r\n            </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n            </Card.Footer>\r\n      </Card>\r\n    );\r\n}\r\n\r\nexport default Score;","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\List\\List.jsx",["117","118","119"],[],"import React, { useState, useEffect } from 'react';\r\nimport {Grid, Typography } from '@material-ui/core';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nimport useStyles from './styles';\r\n\r\nconst List = ({questions, difficulty, setUserAnswer, userAnswer, questionPoints, choices, userScore, setUserScore}) => {\r\n    const classes = useStyles();\r\n    const [choice_value, setChoiceValue] = useState('');\r\n    const [isAnswerClicked, setAnswerClicked] = useState(false);\r\n    let userChoice = '';\r\n    let correct_answer = '';\r\n\r\n    const confirmed = (correct_answer) => {\r\n        //isAnswerClicked = true;\r\n        setChoiceValue('');\r\n        setUserAnswer(choice_value);\r\n        console.log(\"The user answer: \" + userAnswer + \" the choice value: \" + choice_value);\r\n        (decodeURIComponent(correct_answer) === decodeURIComponent(choice_value)) ? console.log(\"YOU ARE CORRECT\") : console.log(\"YOU ARE WRONG\");\r\n        console.log(\"Before adding: \" + questionPoints + \" User score: \" + userScore);\r\n        (decodeURIComponent(correct_answer) === decodeURIComponent(choice_value)) ? setUserScore(Number(userScore) + Number(questionPoints)) :  setUserScore(Number(userScore) - Number(questionPoints));\r\n        console.log(\"The user score: \" + userScore);\r\n    }\r\n\r\n    useEffect(() => {\r\n        userChoice = {choice_value};\r\n    }, [choice_value]);\r\n\r\n    const choose_variant = (correct_answer, choice_value) => {\r\n        if (isAnswerClicked) {\r\n            if ((decodeURIComponent(correct_answer) === decodeURIComponent(choice_value))) {\r\n                return \"success\";\r\n            } else {\r\n                return \"danger\";\r\n            }\r\n        } else {\r\n            return \"outline-dark\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container style={{marginTop: 20, display: 'flex', justifyContent:'center', marginLeft: 30, width: '100%'}} >\r\n            {questions?.map((question, i) => (\r\n                <Grid item id=\"1\">\r\n                    <Card key={question} style={{marginTop: 20, marginRight: '100px'}}> \r\n                        <Card.Header> \r\n                            <Typography variant=\"h5\" style={{fontWeight: 'bold'}}> {decodeURIComponent(questions[i].category)}  \r\n                                <text style={{display: 'inline', justifyContent: 'right'}}> for {questionPoints} </text>\r\n                            </Typography>\r\n                        </Card.Header> \r\n                        <Card.Text style={{margin: 20}}> \r\n                            <Typography variant=\"subtitle1\" style={{fontWeight: 'bold'}}> {decodeURIComponent(questions[i].question)}  </Typography>\r\n                        </Card.Text>\r\n\r\n                        {(question.type === \"multiple\") ? (\r\n                            correct_answer = question.correct_answer,\r\n                            console.log(\"The correct answer : \" + correct_answer),\r\n\r\n                            <Grid container spacing={3} style={{display: 'flex', justifyContent: 'center', marginBottom: 20, marginRight: 30}} >\r\n                                <Grid item id={i}>\r\n                                    <ToggleButton variant={choose_variant()} value={choices[0]} onClick={(e) => setChoiceValue(choices[0])} className={classes.button}> {decodeURIComponent(choices[0])} </ToggleButton>\r\n                                    <ToggleButton variant=\"outline-dark\" value={choices[1]} onClick={(e) => setChoiceValue(choices[1])} className={classes.button}> {decodeURIComponent(choices[1])} </ToggleButton>\r\n                                    <ToggleButton variant=\"outline-dark\" value={choices[2]} onClick={(e) => setChoiceValue(choices[2])} className={classes.button}> {decodeURIComponent(choices[2])} </ToggleButton>\r\n                                    <ToggleButton variant=\"outline-dark\" value={choices[3]} onClick={(e) => setChoiceValue(choices[3])} className={classes.button}> {decodeURIComponent(choices[3])} </ToggleButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                            ) : (\r\n                                <Grid container spacing={3} style={{display: 'flex', justifyContent: 'center', marginBottom: 20}} >\r\n                                    <Grid item id={i}>\r\n                                        <ToggleButton variant={choose_variant()} value={true} onClick={(e) => setChoiceValue(true)} className={classes.button}> True </ToggleButton>\r\n                                        <ToggleButton variant={choose_variant()} value={false} onClick={(e) => setChoiceValue(false)} className={classes.button}> False </ToggleButton>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    </Card>,\r\n                    <Button variant=\"primary\" disabled={(choice_value) === '' ? true: false } onClick={() => confirmed(correct_answer)} style={{marginTop: 10}}> Submit </Button>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default List;","C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\Sign-Up\\styles.js",[],[],"C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\services\\user.js",[],[],"C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\Header\\Header.jsx",["120","121","122"],[],"C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\api\\index.js",[],[],"C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\http-common.js",[],[],"C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\List\\styles.js",[],[],"C:\\Users\\Jhaymar\\Desktop\\Projects\\ReactJS\\trivia_junkie\\frontend\\src\\Components\\Header\\styles.js",[],[],{"ruleId":"123","severity":1,"message":"124","line":2,"column":25,"nodeType":"125","messageId":"126","endLine":2,"endColumn":29},{"ruleId":"123","severity":1,"message":"127","line":3,"column":39,"nodeType":"125","messageId":"126","endLine":3,"endColumn":48},{"ruleId":"123","severity":1,"message":"128","line":3,"column":50,"nodeType":"125","messageId":"126","endLine":3,"endColumn":53},{"ruleId":"123","severity":1,"message":"129","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":14},{"ruleId":"123","severity":1,"message":"130","line":15,"column":10,"nodeType":"125","messageId":"126","endLine":15,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":18,"column":13,"nodeType":"133","endLine":18,"endColumn":22},{"ruleId":"123","severity":1,"message":"134","line":2,"column":29,"nodeType":"125","messageId":"126","endLine":2,"endColumn":35},{"ruleId":"123","severity":1,"message":"129","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":17,"column":27,"nodeType":"137","messageId":"138","endLine":17,"endColumn":29},{"ruleId":"123","severity":1,"message":"139","line":21,"column":9,"nodeType":"125","messageId":"126","endLine":21,"endColumn":10},{"ruleId":"123","severity":1,"message":"140","line":28,"column":22,"nodeType":"125","messageId":"126","endLine":28,"endColumn":33},{"ruleId":"123","severity":1,"message":"141","line":29,"column":24,"nodeType":"125","messageId":"126","endLine":29,"endColumn":37},{"ruleId":"123","severity":1,"message":"142","line":38,"column":12,"nodeType":"125","messageId":"126","endLine":38,"endColumn":16},{"ruleId":"123","severity":1,"message":"143","line":38,"column":18,"nodeType":"125","messageId":"126","endLine":38,"endColumn":25},{"ruleId":"135","severity":1,"message":"144","line":49,"column":39,"nodeType":"137","messageId":"138","endLine":49,"endColumn":41},{"ruleId":"135","severity":1,"message":"144","line":51,"column":46,"nodeType":"137","messageId":"138","endLine":51,"endColumn":48},{"ruleId":"131","severity":1,"message":"145","line":66,"column":8,"nodeType":"146","endLine":66,"endColumn":43,"suggestions":"147"},{"ruleId":"123","severity":1,"message":"148","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"149","line":1,"column":28,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"123","severity":1,"message":"150","line":1,"column":38,"nodeType":"125","messageId":"126","endLine":1,"endColumn":44},{"ruleId":"123","severity":1,"message":"128","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":13},{"ruleId":"123","severity":1,"message":"151","line":2,"column":33,"nodeType":"125","messageId":"126","endLine":2,"endColumn":44},{"ruleId":"123","severity":1,"message":"152","line":2,"column":119,"nodeType":"125","messageId":"126","endLine":2,"endColumn":133},{"ruleId":"123","severity":1,"message":"129","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":14},{"ruleId":"123","severity":1,"message":"153","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":12},{"ruleId":"123","severity":1,"message":"154","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":12},{"ruleId":"123","severity":1,"message":"155","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":21},{"ruleId":"123","severity":1,"message":"156","line":9,"column":10,"nodeType":"125","messageId":"126","endLine":9,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":16,"column":27,"nodeType":"137","messageId":"138","endLine":16,"endColumn":29},{"ruleId":"123","severity":1,"message":"139","line":20,"column":9,"nodeType":"125","messageId":"126","endLine":20,"endColumn":10},{"ruleId":"123","severity":1,"message":"148","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"123","severity":1,"message":"128","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":13},{"ruleId":"123","severity":1,"message":"151","line":2,"column":33,"nodeType":"125","messageId":"126","endLine":2,"endColumn":44},{"ruleId":"123","severity":1,"message":"152","line":2,"column":119,"nodeType":"125","messageId":"126","endLine":2,"endColumn":133},{"ruleId":"123","severity":1,"message":"129","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":14},{"ruleId":"123","severity":1,"message":"157","line":9,"column":11,"nodeType":"125","messageId":"126","endLine":9,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":63,"column":180,"nodeType":"160","messageId":"161","endLine":63,"endColumn":193},{"ruleId":"158","severity":1,"message":"159","line":70,"column":198,"nodeType":"160","messageId":"161","endLine":70,"endColumn":211},{"ruleId":"158","severity":1,"message":"159","line":77,"column":193,"nodeType":"160","messageId":"161","endLine":77,"endColumn":206},{"ruleId":"123","severity":1,"message":"134","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"162","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":20},{"ruleId":"135","severity":1,"message":"144","line":14,"column":98,"nodeType":"137","messageId":"138","endLine":14,"endColumn":100},{"ruleId":"123","severity":1,"message":"163","line":12,"column":29,"nodeType":"125","messageId":"126","endLine":12,"endColumn":45},{"ruleId":"123","severity":1,"message":"164","line":13,"column":9,"nodeType":"125","messageId":"126","endLine":13,"endColumn":19},{"ruleId":"131","severity":1,"message":"165","line":28,"column":22,"nodeType":"166","endLine":28,"endColumn":36},{"ruleId":"123","severity":1,"message":"127","line":2,"column":39,"nodeType":"125","messageId":"126","endLine":2,"endColumn":48},{"ruleId":"123","severity":1,"message":"128","line":2,"column":50,"nodeType":"125","messageId":"126","endLine":2,"endColumn":53},{"ruleId":"123","severity":1,"message":"134","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":14},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'InputBase' is defined but never used.","'Box' is defined but never used.","'Header' is defined but never used.","'login' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'login' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'Button' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'i' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'setDifficulty' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'category' and 'difficulty'. Either include them or remove the dependency array.","ArrayExpression",["167"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'CardContent' is defined but never used.","'FormHelperText' is defined but never used.","'List' is defined but never used.","'User' is defined but never used.","'getTriviaData' is defined but never used.","'shuffle' is defined but never used.","'classes' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'ToggleButton' is defined but never used.","'setAnswerClicked' is assigned a value but never used.","'userChoice' is assigned a value but never used.","Assignments to the 'userChoice' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression",{"desc":"168","fix":"169"},"Update the dependencies array to be: [userAnswer, userScore, isGameOver, category, difficulty]",{"range":"170","text":"171"},[2332,2367],"[userAnswer, userScore, isGameOver, category, difficulty]"]