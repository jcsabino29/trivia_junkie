{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Jhaymar\\\\Desktop\\\\Projects\\\\ReactJS\\\\trivia_junkie\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useEffect,useState,useRef}from'react';import{CssBaseline,Grid,Button}from'@material-ui/core';import Header from'../Header/Header';import List from'../List/List.jsx';import User from'../User/User.jsx';import getTriviaData from'../../api';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function shuffle(array){var temp_arr=[];var indices=[0,1,2,3];var randomIndex=0;var i=0;//console.log(\"Actual array: \" + array);\nwhile(indices.length!=0){randomIndex=Math.floor(Math.random()*100)%indices.length;temp_arr=temp_arr.concat(array[indices[randomIndex]]);indices.splice(randomIndex,1);//Remove the element\ni++;}return temp_arr;}var Home=function Home(){var _useState=useState('General Knowledge'),_useState2=_slicedToArray(_useState,2),category=_useState2[0],setCategory=_useState2[1];var _useState3=useState('easy'),_useState4=_slicedToArray(_useState3,2),difficulty=_useState4[0],setDifficulty=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),questions=_useState6[0],setQuestions=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),userAnswer=_useState8[0],setUserAnswer=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),correct_answer=_useState10[0],setCorrectAnswer=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),isCorrect=_useState12[0],setIsCorrect=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),questionPoints=_useState14[0],setQuestionPoints=_useState14[1];var _useState15=useState(1000),_useState16=_slicedToArray(_useState15,2),userScore=_useState16[0],setUserScore=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),choices=_useState18[0],setChoices=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),isGameOver=_useState20[0],setGameOver=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),show=_useState22[0],setShow=_useState22[1];var ref=useRef(null);//User answer acts as a confirmation\nuseEffect(function(){getTriviaData(category,difficulty).then(function(results){//setGameOver(false);\nsetChoices(shuffle(results[0].incorrect_answers.concat(results[0].correct_answer)));setQuestions(results);setUserAnswer(userAnswer);if(results[0].difficulty=='easy'){setQuestionPoints(100);}else if(results[0].difficulty=='medium'){setQuestionPoints(300);}else{setQuestionPoints(500);}if(userScore<=0){setGameOver(true);if(isGameOver){}else{setUserScore(1000);}}else{console.log(\"USER SCORE NOT <= 0\");}});},[userAnswer,userScore,isGameOver]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,style:{width:'100%'},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,style:{display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(User,{userScore:userScore})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,style:{display:'flex',justifyContent:'center',alignItems:'center'},ref:ref,children:/*#__PURE__*/_jsx(List,{questions:questions,setUserAnswer:setUserAnswer,userAnswer:userAnswer,isCorrect:isCorrect,setIsCorrect:setIsCorrect,correct_answer:correct_answer,setCorrectAnswer:setCorrectAnswer,questionPoints:questionPoints,choices:choices,setUserScore:setUserScore,userScore:userScore})})]})]});};export default Home;","map":{"version":3,"sources":["C:/Users/Jhaymar/Desktop/Projects/ReactJS/trivia_junkie/frontend/src/Components/Home/Home.jsx"],"names":["React","useEffect","useState","useRef","CssBaseline","Grid","Button","Header","List","User","getTriviaData","shuffle","array","temp_arr","indices","randomIndex","i","length","Math","floor","random","concat","splice","Home","category","setCategory","difficulty","setDifficulty","questions","setQuestions","userAnswer","setUserAnswer","correct_answer","setCorrectAnswer","isCorrect","setIsCorrect","questionPoints","setQuestionPoints","userScore","setUserScore","choices","setChoices","isGameOver","setGameOver","show","setShow","ref","then","results","incorrect_answers","console","log","width","display","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef} from 'react';\r\nimport { CssBaseline, Grid, Button } from '@material-ui/core';\r\n\r\nimport Header from '../Header/Header';\r\nimport List from '../List/List.jsx';\r\nimport User from '../User/User.jsx';\r\n\r\nimport getTriviaData from '../../api';\r\n\r\nfunction shuffle(array) {\r\n    let temp_arr = [];\r\n    let indices = [0, 1, 2, 3]\r\n    let randomIndex = 0;\r\n    let i = 0;\r\n\r\n    //console.log(\"Actual array: \" + array);\r\n    while (indices.length != 0) {\r\n        randomIndex = (Math.floor(Math.random() * 100)) % indices.length;\r\n        temp_arr = temp_arr.concat(array[indices[randomIndex]]);\r\n        indices.splice(randomIndex, 1); //Remove the element\r\n        i++;\r\n    }\r\n\r\n    return temp_arr;\r\n}\r\n\r\nconst Home = () => {\r\n    const [category, setCategory] = useState('General Knowledge');\r\n    const [difficulty, setDifficulty] = useState('easy');\r\n    const [questions, setQuestions] = useState([]);\r\n    const [userAnswer, setUserAnswer] = useState('');\r\n    const [correct_answer, setCorrectAnswer] = useState('');\r\n    const [isCorrect, setIsCorrect] = useState('');\r\n    const [questionPoints, setQuestionPoints] = useState('');\r\n    const [userScore, setUserScore] = useState(1000);\r\n    const [choices, setChoices] = useState([]);\r\n    const [isGameOver, setGameOver]  = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const ref = useRef(null);\r\n\r\n    //User answer acts as a confirmation\r\n    useEffect(() => {\r\n        getTriviaData(category, difficulty).then((results) => {\r\n            //setGameOver(false);\r\n            setChoices(shuffle(results[0].incorrect_answers.concat(results[0].correct_answer)));\r\n            setQuestions(results);\r\n            setUserAnswer(userAnswer);\r\n            if (results[0].difficulty == 'easy') {\r\n                setQuestionPoints(100);\r\n            } else if (results[0].difficulty == 'medium') {\r\n                setQuestionPoints(300);\r\n            } else { \r\n                setQuestionPoints(500);\r\n            }\r\n\r\n            if (userScore <= 0) {\r\n                setGameOver(true);\r\n                if (isGameOver) {\r\n                    \r\n                } else {\r\n                    setUserScore(1000);\r\n                }\r\n            } else { console.log(\"USER SCORE NOT <= 0\"); }\r\n        })\r\n    }, [userAnswer, userScore, isGameOver]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Grid container spacing={3} style={{width: '100%'}}>\r\n                <Grid item xs={12} md={4} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center'}}> \r\n                    <User userScore={userScore} />\r\n                    </Grid>\r\n                        <Grid item xs={12} md={8} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center'}} ref={ref}> \r\n                            <List\r\n                                questions={questions}\r\n                                setUserAnswer={setUserAnswer}\r\n                                userAnswer={userAnswer}\r\n                                isCorrect={isCorrect}\r\n                                setIsCorrect={setIsCorrect}\r\n                                correct_answer={correct_answer}\r\n                                setCorrectAnswer={setCorrectAnswer}\r\n                                questionPoints={questionPoints}\r\n                                choices={choices}\r\n                                setUserScore={setUserScore}\r\n                                userScore={userScore}\r\n                            />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}