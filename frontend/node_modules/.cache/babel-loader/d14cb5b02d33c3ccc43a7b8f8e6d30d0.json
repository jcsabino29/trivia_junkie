{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jhaymar\\\\Desktop\\\\Projects\\\\ReactJS\\\\trivia_junkie\\\\frontend\\\\src\\\\Components\\\\List\\\\List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport Button from 'react-bootstrap/Button';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport Card from 'react-bootstrap/Card';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = _ref => {\n  _s();\n\n  let {\n    questions,\n    difficulty,\n    setUserAnswer,\n    userAnswer,\n    questionPoints,\n    choices,\n    userScore,\n    setUserScore\n  } = _ref;\n  const classes = useStyles();\n  const [choice_value, setChoiceValue] = useState('');\n  const [isAnswerClicked, setAnswerClicked] = useState(false);\n  let userChoice = '';\n  let correct_answer = '';\n\n  const confirmed = correct_answer => {\n    //isAnswerClicked = true;\n    setChoiceValue('');\n    setUserAnswer(choice_value);\n    console.log(\"The user answer: \" + userAnswer + \" the choice value: \" + choice_value);\n    decodeURIComponent(correct_answer) === decodeURIComponent(choice_value) ? console.log(\"YOU ARE CORRECT\") : console.log(\"YOU ARE WRONG\");\n    console.log(\"Before adding: \" + questionPoints + \" User score: \" + userScore);\n    decodeURIComponent(correct_answer) === decodeURIComponent(choice_value) ? setUserScore(Number(userScore) + Number(questionPoints)) : setUserScore(Number(userScore) - Number(questionPoints));\n    console.log(\"The user score: \" + userScore);\n  };\n\n  useEffect(() => {\n    userChoice = {\n      choice_value\n    };\n  }, [choice_value]);\n\n  const choose_variant = (correct_answer, choice_value) => {\n    if (isAnswerClicked) {\n      if (decodeURIComponent(correct_answer) === decodeURIComponent(choice_value)) {\n        return \"success\";\n      } else {\n        return \"danger\";\n      }\n    } else {\n      return \"outline-dark\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: {\n      marginTop: 20,\n      display: 'flex',\n      justifyContent: 'center',\n      marginLeft: 30,\n      width: '100%'\n    },\n    children: questions === null || questions === void 0 ? void 0 : questions.map((question, i) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      id: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          marginTop: 20,\n          marginRight: '100px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            style: {\n              fontWeight: 'bold'\n            },\n            children: [\" \", decodeURIComponent(questions[i].category), /*#__PURE__*/_jsxDEV(\"text\", {\n              style: {\n                display: 'inline',\n                justifyContent: 'right'\n              },\n              children: [\" for \", questionPoints, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          style: {\n            margin: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            style: {\n              fontWeight: 'bold'\n            },\n            children: [\" \", decodeURIComponent(questions[i].question), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), question.type === \"multiple\" ? (correct_answer = question.correct_answer, console.log(\"The correct answer : \" + correct_answer), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: 20,\n            marginRight: 30\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            id: i,\n            children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n              variant: choose_variant(),\n              value: choices[0],\n              onClick: e => setChoiceValue(choices[0]),\n              className: classes.button,\n              children: [\" \", decodeURIComponent(choices[0]), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              variant: \"outline-dark\",\n              value: choices[1],\n              onClick: e => setChoiceValue(choices[1]),\n              className: classes.button,\n              children: [\" \", decodeURIComponent(choices[1]), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              variant: \"outline-dark\",\n              value: choices[2],\n              onClick: e => setChoiceValue(choices[2]),\n              className: classes.button,\n              children: [\" \", decodeURIComponent(choices[2]), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              variant: \"outline-dark\",\n              value: choices[3],\n              onClick: e => setChoiceValue(choices[3]),\n              className: classes.button,\n              children: [\" \", decodeURIComponent(choices[3]), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            id: i,\n            children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n              variant: choose_variant(),\n              value: true,\n              onClick: e => setChoiceValue(true),\n              className: classes.button,\n              children: \" True \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              variant: choose_variant(),\n              value: false,\n              onClick: e => setChoiceValue(false),\n              className: classes.button,\n              children: \" False \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }, this)]\n      }, question, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), \",\", /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        disabled: choice_value === '' ? true : false,\n        onClick: () => confirmed(correct_answer),\n        style: {\n          marginTop: 10\n        },\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(List, \"X3C5x+O67cfEMEuyhVDeXjGJB70=\", false, function () {\n  return [useStyles];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/Jhaymar/Desktop/Projects/ReactJS/trivia_junkie/frontend/src/Components/List/List.jsx"],"names":["React","useState","useEffect","Grid","Typography","Button","ToggleButton","Card","useStyles","List","questions","difficulty","setUserAnswer","userAnswer","questionPoints","choices","userScore","setUserScore","classes","choice_value","setChoiceValue","isAnswerClicked","setAnswerClicked","userChoice","correct_answer","confirmed","console","log","decodeURIComponent","Number","choose_variant","marginTop","display","justifyContent","marginLeft","width","map","question","i","marginRight","fontWeight","category","margin","type","marginBottom","e","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,IAAR,EAAcC,UAAd,QAAgC,mBAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,OAAOC,SAAP,MAAsB,UAAtB;;;AAEA,MAAMC,IAAI,GAAG,QAA0G;AAAA;;AAAA,MAAzG;AAACC,IAAAA,SAAD;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA,aAAxB;AAAuCC,IAAAA,UAAvC;AAAmDC,IAAAA,cAAnD;AAAmEC,IAAAA,OAAnE;AAA4EC,IAAAA,SAA5E;AAAuFC,IAAAA;AAAvF,GAAyG;AACnH,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM,CAACW,YAAD,EAAeC,cAAf,IAAiCnB,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACoB,eAAD,EAAkBC,gBAAlB,IAAsCrB,QAAQ,CAAC,KAAD,CAApD;AACA,MAAIsB,UAAU,GAAG,EAAjB;AACA,MAAIC,cAAc,GAAG,EAArB;;AAEA,QAAMC,SAAS,GAAID,cAAD,IAAoB;AAClC;AACAJ,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAR,IAAAA,aAAa,CAACO,YAAD,CAAb;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBd,UAAtB,GAAmC,qBAAnC,GAA2DM,YAAvE;AACCS,IAAAA,kBAAkB,CAACJ,cAAD,CAAlB,KAAuCI,kBAAkB,CAACT,YAAD,CAA1D,GAA4EO,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA5E,GAA6GD,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA7G;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBb,cAApB,GAAqC,eAArC,GAAuDE,SAAnE;AACCY,IAAAA,kBAAkB,CAACJ,cAAD,CAAlB,KAAuCI,kBAAkB,CAACT,YAAD,CAA1D,GAA4EF,YAAY,CAACY,MAAM,CAACb,SAAD,CAAN,GAAoBa,MAAM,CAACf,cAAD,CAA3B,CAAxF,GAAwIG,YAAY,CAACY,MAAM,CAACb,SAAD,CAAN,GAAoBa,MAAM,CAACf,cAAD,CAA3B,CAApJ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBX,SAAjC;AACH,GATD;;AAWAd,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,UAAU,GAAG;AAACJ,MAAAA;AAAD,KAAb;AACH,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,QAAMW,cAAc,GAAG,CAACN,cAAD,EAAiBL,YAAjB,KAAkC;AACrD,QAAIE,eAAJ,EAAqB;AACjB,UAAKO,kBAAkB,CAACJ,cAAD,CAAlB,KAAuCI,kBAAkB,CAACT,YAAD,CAA9D,EAA+E;AAC3E,eAAO,SAAP;AACH,OAFD,MAEO;AACH,eAAO,QAAP;AACH;AACJ,KAND,MAMO;AACH,aAAO,cAAP;AACH;AACJ,GAVD;;AAYA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,KAAK,EAAE;AAACY,MAAAA,SAAS,EAAE,EAAZ;AAAgBC,MAAAA,OAAO,EAAE,MAAzB;AAAiCC,MAAAA,cAAc,EAAC,QAAhD;AAA0DC,MAAAA,UAAU,EAAE,EAAtE;AAA0EC,MAAAA,KAAK,EAAE;AAAjF,KAAvB;AAAA,cACKzB,SADL,aACKA,SADL,uBACKA,SAAS,CAAE0B,GAAX,CAAe,CAACC,QAAD,EAAWC,CAAX,kBACZ,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAC,GAAd;AAAA,8BACI,QAAC,IAAD;AAAqB,QAAA,KAAK,EAAE;AAACP,UAAAA,SAAS,EAAE,EAAZ;AAAgBQ,UAAAA,WAAW,EAAE;AAA7B,SAA5B;AAAA,gCACI,QAAC,IAAD,CAAM,MAAN;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,KAAK,EAAE;AAACC,cAAAA,UAAU,EAAE;AAAb,aAAhC;AAAA,4BAAwDZ,kBAAkB,CAAClB,SAAS,CAAC4B,CAAD,CAAT,CAAaG,QAAd,CAA1E,eACI;AAAM,cAAA,KAAK,EAAE;AAACT,gBAAAA,OAAO,EAAE,QAAV;AAAoBC,gBAAAA,cAAc,EAAE;AAApC,eAAb;AAAA,kCAAiEnB,cAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAE;AAAC4B,YAAAA,MAAM,EAAE;AAAT,WAAlB;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,WAApB;AAAgC,YAAA,KAAK,EAAE;AAACF,cAAAA,UAAU,EAAE;AAAb,aAAvC;AAAA,4BAA+DZ,kBAAkB,CAAClB,SAAS,CAAC4B,CAAD,CAAT,CAAaD,QAAd,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ,EAUMA,QAAQ,CAACM,IAAT,KAAkB,UAAnB,IACGnB,cAAc,GAAGa,QAAQ,CAACb,cAA1B,EACAE,OAAO,CAACC,GAAR,CAAY,0BAA0BH,cAAtC,CADA,eAGA,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAA4B,UAAA,KAAK,EAAE;AAACQ,YAAAA,OAAO,EAAE,MAAV;AAAkBC,YAAAA,cAAc,EAAE,QAAlC;AAA4CW,YAAAA,YAAY,EAAE,EAA1D;AAA8DL,YAAAA,WAAW,EAAE;AAA3E,WAAnC;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAED,CAAf;AAAA,oCACI,QAAC,YAAD;AAAc,cAAA,OAAO,EAAER,cAAc,EAArC;AAAyC,cAAA,KAAK,EAAEf,OAAO,CAAC,CAAD,CAAvD;AAA4D,cAAA,OAAO,EAAG8B,CAAD,IAAOzB,cAAc,CAACL,OAAO,CAAC,CAAD,CAAR,CAA1F;AAAwG,cAAA,SAAS,EAAEG,OAAO,CAAC4B,MAA3H;AAAA,8BAAqIlB,kBAAkB,CAACb,OAAO,CAAC,CAAD,CAAR,CAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,YAAD;AAAc,cAAA,OAAO,EAAC,cAAtB;AAAqC,cAAA,KAAK,EAAEA,OAAO,CAAC,CAAD,CAAnD;AAAwD,cAAA,OAAO,EAAG8B,CAAD,IAAOzB,cAAc,CAACL,OAAO,CAAC,CAAD,CAAR,CAAtF;AAAoG,cAAA,SAAS,EAAEG,OAAO,CAAC4B,MAAvH;AAAA,8BAAiIlB,kBAAkB,CAACb,OAAO,CAAC,CAAD,CAAR,CAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,YAAD;AAAc,cAAA,OAAO,EAAC,cAAtB;AAAqC,cAAA,KAAK,EAAEA,OAAO,CAAC,CAAD,CAAnD;AAAwD,cAAA,OAAO,EAAG8B,CAAD,IAAOzB,cAAc,CAACL,OAAO,CAAC,CAAD,CAAR,CAAtF;AAAoG,cAAA,SAAS,EAAEG,OAAO,CAAC4B,MAAvH;AAAA,8BAAiIlB,kBAAkB,CAACb,OAAO,CAAC,CAAD,CAAR,CAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,YAAD;AAAc,cAAA,OAAO,EAAC,cAAtB;AAAqC,cAAA,KAAK,EAAEA,OAAO,CAAC,CAAD,CAAnD;AAAwD,cAAA,OAAO,EAAG8B,CAAD,IAAOzB,cAAc,CAACL,OAAO,CAAC,CAAD,CAAR,CAAtF;AAAoG,cAAA,SAAS,EAAEG,OAAO,CAAC4B,MAAvH;AAAA,8BAAiIlB,kBAAkB,CAACb,OAAO,CAAC,CAAD,CAAR,CAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJH,iBAaO,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAA4B,UAAA,KAAK,EAAE;AAACiB,YAAAA,OAAO,EAAE,MAAV;AAAkBC,YAAAA,cAAc,EAAE,QAAlC;AAA4CW,YAAAA,YAAY,EAAE;AAA1D,WAAnC;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAEN,CAAf;AAAA,oCACI,QAAC,YAAD;AAAc,cAAA,OAAO,EAAER,cAAc,EAArC;AAAyC,cAAA,KAAK,EAAE,IAAhD;AAAsD,cAAA,OAAO,EAAGe,CAAD,IAAOzB,cAAc,CAAC,IAAD,CAApF;AAA4F,cAAA,SAAS,EAAEF,OAAO,CAAC4B,MAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,YAAD;AAAc,cAAA,OAAO,EAAEhB,cAAc,EAArC;AAAyC,cAAA,KAAK,EAAE,KAAhD;AAAuD,cAAA,OAAO,EAAGe,CAAD,IAAOzB,cAAc,CAAC,KAAD,CAArF;AAA8F,cAAA,SAAS,EAAEF,OAAO,CAAC4B,MAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvBZ;AAAA,SAAWT,QAAX;AAAA;AAAA;AAAA;AAAA,cADJ,oBAiCI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,QAAQ,EAAGlB,YAAD,KAAmB,EAAnB,GAAwB,IAAxB,GAA8B,KAAlE;AAA0E,QAAA,OAAO,EAAE,MAAMM,SAAS,CAACD,cAAD,CAAlG;AAAoH,QAAA,KAAK,EAAE;AAACO,UAAAA,SAAS,EAAE;AAAZ,SAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CA3ED;;GAAMtB,I;UACcD,S;;;KADdC,I;AA6EN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {Grid, Typography } from '@material-ui/core';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nimport useStyles from './styles';\r\n\r\nconst List = ({questions, difficulty, setUserAnswer, userAnswer, questionPoints, choices, userScore, setUserScore}) => {\r\n    const classes = useStyles();\r\n    const [choice_value, setChoiceValue] = useState('');\r\n    const [isAnswerClicked, setAnswerClicked] = useState(false);\r\n    let userChoice = '';\r\n    let correct_answer = '';\r\n\r\n    const confirmed = (correct_answer) => {\r\n        //isAnswerClicked = true;\r\n        setChoiceValue('');\r\n        setUserAnswer(choice_value);\r\n        console.log(\"The user answer: \" + userAnswer + \" the choice value: \" + choice_value);\r\n        (decodeURIComponent(correct_answer) === decodeURIComponent(choice_value)) ? console.log(\"YOU ARE CORRECT\") : console.log(\"YOU ARE WRONG\");\r\n        console.log(\"Before adding: \" + questionPoints + \" User score: \" + userScore);\r\n        (decodeURIComponent(correct_answer) === decodeURIComponent(choice_value)) ? setUserScore(Number(userScore) + Number(questionPoints)) :  setUserScore(Number(userScore) - Number(questionPoints));\r\n        console.log(\"The user score: \" + userScore);\r\n    }\r\n\r\n    useEffect(() => {\r\n        userChoice = {choice_value};\r\n    }, [choice_value]);\r\n\r\n    const choose_variant = (correct_answer, choice_value) => {\r\n        if (isAnswerClicked) {\r\n            if ((decodeURIComponent(correct_answer) === decodeURIComponent(choice_value))) {\r\n                return \"success\";\r\n            } else {\r\n                return \"danger\";\r\n            }\r\n        } else {\r\n            return \"outline-dark\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container style={{marginTop: 20, display: 'flex', justifyContent:'center', marginLeft: 30, width: '100%'}} >\r\n            {questions?.map((question, i) => (\r\n                <Grid item id=\"1\">\r\n                    <Card key={question} style={{marginTop: 20, marginRight: '100px'}}> \r\n                        <Card.Header> \r\n                            <Typography variant=\"h5\" style={{fontWeight: 'bold'}}> {decodeURIComponent(questions[i].category)}  \r\n                                <text style={{display: 'inline', justifyContent: 'right'}}> for {questionPoints} </text>\r\n                            </Typography>\r\n                        </Card.Header> \r\n                        <Card.Text style={{margin: 20}}> \r\n                            <Typography variant=\"subtitle1\" style={{fontWeight: 'bold'}}> {decodeURIComponent(questions[i].question)}  </Typography>\r\n                        </Card.Text>\r\n\r\n                        {(question.type === \"multiple\") ? (\r\n                            correct_answer = question.correct_answer,\r\n                            console.log(\"The correct answer : \" + correct_answer),\r\n\r\n                            <Grid container spacing={3} style={{display: 'flex', justifyContent: 'center', marginBottom: 20, marginRight: 30}} >\r\n                                <Grid item id={i}>\r\n                                    <ToggleButton variant={choose_variant()} value={choices[0]} onClick={(e) => setChoiceValue(choices[0])} className={classes.button}> {decodeURIComponent(choices[0])} </ToggleButton>\r\n                                    <ToggleButton variant=\"outline-dark\" value={choices[1]} onClick={(e) => setChoiceValue(choices[1])} className={classes.button}> {decodeURIComponent(choices[1])} </ToggleButton>\r\n                                    <ToggleButton variant=\"outline-dark\" value={choices[2]} onClick={(e) => setChoiceValue(choices[2])} className={classes.button}> {decodeURIComponent(choices[2])} </ToggleButton>\r\n                                    <ToggleButton variant=\"outline-dark\" value={choices[3]} onClick={(e) => setChoiceValue(choices[3])} className={classes.button}> {decodeURIComponent(choices[3])} </ToggleButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                            ) : (\r\n                                <Grid container spacing={3} style={{display: 'flex', justifyContent: 'center', marginBottom: 20}} >\r\n                                    <Grid item id={i}>\r\n                                        <ToggleButton variant={choose_variant()} value={true} onClick={(e) => setChoiceValue(true)} className={classes.button}> True </ToggleButton>\r\n                                        <ToggleButton variant={choose_variant()} value={false} onClick={(e) => setChoiceValue(false)} className={classes.button}> False </ToggleButton>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    </Card>,\r\n                    <Button variant=\"primary\" disabled={(choice_value) === '' ? true: false } onClick={() => confirmed(correct_answer)} style={{marginTop: 10}}> Submit </Button>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}