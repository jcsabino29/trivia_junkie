{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import{Box,Card,CardHeader,CardContent,Button,CssBaseline,Divider,Container,FormControl,InputLabel,Input,FormHelperText,Typography}from'@mui/material';import Header from'../Header/Header';import List from'../List/List.jsx';import User from'../User/User.jsx';import getTriviaData from'../../api';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function shuffle(array){var temp_arr=[];var indices=[0,1,2,3];var randomIndex=0;var i=0;//console.log(\"Actual array: \" + array);\nwhile(indices.length!=0){randomIndex=Math.floor(Math.random()*100)%indices.length;temp_arr=temp_arr.concat(array[indices[randomIndex]]);indices.splice(randomIndex,1);//Remove the element\ni++;}return temp_arr;}var Login=function Login(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(Container,{maxWidth:\"sm\",children:/*#__PURE__*/_jsxs(Card,{xs:12,md:12,sx:{mt:10,height:'30vh'},children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Log in\",sx:{width:'100%',height:'7vh',display:'flex',textAlign:'left',ml:1}}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(FormControl,{sx:{width:'100%',mt:3,ml:2},required:true,children:/*#__PURE__*/_jsxs(Card,{variant:\"outlined\",sx:{width:'90%'},children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"my-input\",children:\"Username\"}),/*#__PURE__*/_jsx(Input,{disableUnderline:true,tabindex:\"1\",style:{width:'100%',position:'absolute'},sx:{ml:1.5},id:\"my-input\",\"aria-describedby\":\"my-helper-text\"})]})}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(FormControl,{sx:{width:'100%',mt:3,ml:2},required:true,children:/*#__PURE__*/_jsxs(Card,{variant:\"outlined\",sx:{width:'90%'},children:[/*#__PURE__*/_jsx(InputLabel,{type:\"password\",tabindex:\"2\",htmlFor:\"my-input\",children:\"Password\"}),/*#__PURE__*/_jsx(Input,{disableUnderline:true,style:{width:'100%',position:'absolute'},sx:{ml:1.5},id:\"my-input\",\"aria-describedby\":\"my-helper-text\"})]})}),/*#__PURE__*/_jsx(Button,{variant:\"text\",style:{backgroundColor:\"blue\"},sx:{mt:2,ml:2,height:'2vh'},children:/*#__PURE__*/_jsx(Typography,{variant:\"priamry\",children:\"Forgot password\"})})]})})]});};export default Login;","map":{"version":3,"sources":["C:/Users/Jhaymar/Desktop/Projects/ReactJS/trivia_junkie/frontend/src/Components/Login/Login.jsx"],"names":["React","useEffect","useState","useRef","Box","Card","CardHeader","CardContent","Button","CssBaseline","Divider","Container","FormControl","InputLabel","Input","FormHelperText","Typography","Header","List","User","getTriviaData","shuffle","array","temp_arr","indices","randomIndex","i","length","Math","floor","random","concat","splice","Login","mt","height","width","display","textAlign","ml","position","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef} from 'react';\r\nimport { Box, Card, CardHeader, CardContent, Button, CssBaseline, Divider, Container, FormControl, InputLabel, Input, FormHelperText, Typography} from '@mui/material';\r\n\r\nimport Header from '../Header/Header';\r\nimport List from '../List/List.jsx';\r\nimport User from '../User/User.jsx';\r\nimport getTriviaData from '../../api';\r\n\r\nfunction shuffle(array) {\r\n    let temp_arr = [];\r\n    let indices = [0, 1, 2, 3]\r\n    let randomIndex = 0;\r\n    let i = 0;\r\n\r\n    //console.log(\"Actual array: \" + array);\r\n    while (indices.length != 0) {\r\n        randomIndex = (Math.floor(Math.random() * 100)) % indices.length;\r\n        temp_arr = temp_arr.concat(array[indices[randomIndex]]);\r\n        indices.splice(randomIndex, 1); //Remove the element\r\n        i++;\r\n    }\r\n\r\n    return temp_arr;\r\n}\r\n\r\nconst Login = () => {\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <CssBaseline />\r\n                <Container maxWidth=\"sm\">\r\n                    <Card xs={12} md={12} sx={{mt: 10, height: '30vh'}} >\r\n                        <CardHeader title=\"Log in\" sx={{width: '100%', height: '7vh', display: 'flex', textAlign: 'left', ml: 1}}/>\r\n                        <Divider />\r\n                        <FormControl sx={{width: '100%', mt: 3, ml: 2}} required={true}>\r\n                            <Card variant=\"outlined\" sx={{width: '90%'}}>\r\n                                <InputLabel htmlFor=\"my-input\">Username</InputLabel>\r\n                                <Input disableUnderline={true} tabindex=\"1\" style={{width: '100%', position: 'absolute'}} sx={{ml: 1.5}} id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n                            </Card>\r\n                        </FormControl>\r\n                        <div />\r\n                        <FormControl sx={{width: '100%', mt: 3, ml: 2}} required={true}>\r\n                            <Card variant=\"outlined\" sx={{width: '90%'}}>\r\n                                <InputLabel type=\"password\" tabindex=\"2\" htmlFor=\"my-input\">Password</InputLabel>\r\n                                <Input disableUnderline={true} style={{width: '100%', position: 'absolute'}} sx={{ml: 1.5}} id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n                            </Card>\r\n                        </FormControl>\r\n\r\n                            <Button variant=\"text\" style={{backgroundColor: \"blue\"}} sx={{mt: 2, ml: 2, height: '2vh'}}> \r\n                                <Typography variant=\"priamry\">Forgot password</Typography>\r\n                            </Button>\r\n\r\n                    </Card>\r\n                </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}