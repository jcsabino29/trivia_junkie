{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Jhaymar\\\\Desktop\\\\Projects\\\\ReactJS\\\\trivia_junkie\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState,useEffect}from'react';import{Grid,Typography}from'@material-ui/core';import Button from'react-bootstrap/Button';import ToggleButton from'react-bootstrap/ToggleButton';import Card from'react-bootstrap/Card';import useStyles from'./styles';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var List=function List(_ref){var questions=_ref.questions,difficulty=_ref.difficulty,setUserAnswer=_ref.setUserAnswer,userAnswer=_ref.userAnswer,questionPoints=_ref.questionPoints,choices=_ref.choices,userScore=_ref.userScore,setUserScore=_ref.setUserScore;var classes=useStyles();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),choice_value=_useState2[0],setChoiceValue=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isAnswerClicked=_useState4[0],setAnswerClicked=_useState4[1];var userChoice='';var correct_answer='';var confirmed=function confirmed(correct_answer){//isAnswerClicked = true;\nsetChoiceValue('');setUserAnswer(choice_value);console.log(\"The user answer: \"+userAnswer+\" the choice value: \"+choice_value);decodeURIComponent(correct_answer)===decodeURIComponent(choice_value)?console.log(\"YOU ARE CORRECT\"):console.log(\"YOU ARE WRONG\");console.log(\"Before adding: \"+questionPoints+\" User score: \"+userScore);decodeURIComponent(correct_answer)===decodeURIComponent(choice_value)?setUserScore(Number(userScore)+Number(questionPoints)):setUserScore(Number(userScore)-Number(questionPoints));console.log(\"The user score: \"+userScore);};useEffect(function(){userChoice={choice_value:choice_value};},[choice_value]);var choose_variant=function choose_variant(correct_answer,choice_value){if(isAnswerClicked){if(decodeURIComponent(correct_answer)===decodeURIComponent(choice_value)){return\"success\";}else{return\"danger\";}}else{return\"outline-dark\";}};return/*#__PURE__*/_jsx(Grid,{container:true,style:{marginTop:20,display:'flex',justifyContent:'center',marginLeft:30,width:'100%'},children:questions===null||questions===void 0?void 0:questions.map(function(question,i){return/*#__PURE__*/_jsxs(Grid,{item:true,id:\"1\",children:[/*#__PURE__*/_jsxs(Card,{style:{marginTop:20,marginRight:'100px'},children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",style:{fontWeight:'bold'},children:[\" \",decodeURIComponent(questions[i].category),/*#__PURE__*/_jsxs(\"text\",{style:{display:'inline',justifyContent:'right'},children:[\" for \",questionPoints,\" \"]})]})}),/*#__PURE__*/_jsx(Card.Text,{style:{margin:20},children:/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",style:{fontWeight:'bold'},children:[\" \",decodeURIComponent(questions[i].question),\"  \"]})}),question.type===\"multiple\"?(correct_answer=question.correct_answer,console.log(\"The correct answer : \"+correct_answer),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,style:{display:'flex',justifyContent:'center',marginBottom:20,marginRight:30},children:/*#__PURE__*/_jsxs(Grid,{item:true,id:i,children:[/*#__PURE__*/_jsxs(ToggleButton,{variant:choose_variant(),value:choices[0],onClick:function onClick(e){return setChoiceValue(choices[0]);},className:classes.button,children:[\" \",decodeURIComponent(choices[0]),\" \"]}),/*#__PURE__*/_jsxs(ToggleButton,{variant:\"outline-dark\",value:choices[1],onClick:function onClick(e){return setChoiceValue(choices[1]);},className:classes.button,children:[\" \",decodeURIComponent(choices[1]),\" \"]}),/*#__PURE__*/_jsxs(ToggleButton,{variant:\"outline-dark\",value:choices[2],onClick:function onClick(e){return setChoiceValue(choices[2]);},className:classes.button,children:[\" \",decodeURIComponent(choices[2]),\" \"]}),/*#__PURE__*/_jsxs(ToggleButton,{variant:\"outline-dark\",value:choices[3],onClick:function onClick(e){return setChoiceValue(choices[3]);},className:classes.button,children:[\" \",decodeURIComponent(choices[3]),\" \"]})]})})):/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,style:{display:'flex',justifyContent:'center',marginBottom:20},children:/*#__PURE__*/_jsxs(Grid,{item:true,id:i,children:[/*#__PURE__*/_jsx(ToggleButton,{variant:choose_variant(),value:true,onClick:function onClick(e){return setChoiceValue(true);},className:classes.button,children:\" True \"}),/*#__PURE__*/_jsx(ToggleButton,{variant:choose_variant(),value:false,onClick:function onClick(e){return setChoiceValue(false);},className:classes.button,children:\" False \"})]})})]},question),\",\",/*#__PURE__*/_jsx(Button,{variant:\"primary\",disabled:choice_value===''?true:false,onClick:function onClick(){return confirmed(correct_answer);},style:{marginTop:10},children:\" Submit \"})]});})});};export default List;","map":{"version":3,"sources":["C:/Users/Jhaymar/Desktop/Projects/ReactJS/trivia_junkie/frontend/src/Components/List/List.jsx"],"names":["React","useState","useEffect","Grid","Typography","Button","ToggleButton","Card","useStyles","List","questions","difficulty","setUserAnswer","userAnswer","questionPoints","choices","userScore","setUserScore","classes","choice_value","setChoiceValue","isAnswerClicked","setAnswerClicked","userChoice","correct_answer","confirmed","console","log","decodeURIComponent","Number","choose_variant","marginTop","display","justifyContent","marginLeft","width","map","question","i","marginRight","fontWeight","category","margin","type","marginBottom","e","button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {Grid, Typography } from '@material-ui/core';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nimport useStyles from './styles';\r\n\r\nconst List = ({questions, difficulty, setUserAnswer, userAnswer, questionPoints, choices, userScore, setUserScore}) => {\r\n    const classes = useStyles();\r\n    const [choice_value, setChoiceValue] = useState('');\r\n    const [isAnswerClicked, setAnswerClicked] = useState(false);\r\n    let userChoice = '';\r\n    let correct_answer = '';\r\n\r\n    const confirmed = (correct_answer) => {\r\n        //isAnswerClicked = true;\r\n        setChoiceValue('');\r\n        setUserAnswer(choice_value);\r\n        console.log(\"The user answer: \" + userAnswer + \" the choice value: \" + choice_value);\r\n        (decodeURIComponent(correct_answer) === decodeURIComponent(choice_value)) ? console.log(\"YOU ARE CORRECT\") : console.log(\"YOU ARE WRONG\");\r\n        console.log(\"Before adding: \" + questionPoints + \" User score: \" + userScore);\r\n        (decodeURIComponent(correct_answer) === decodeURIComponent(choice_value)) ? setUserScore(Number(userScore) + Number(questionPoints)) :  setUserScore(Number(userScore) - Number(questionPoints));\r\n        console.log(\"The user score: \" + userScore);\r\n    }\r\n\r\n    useEffect(() => {\r\n        userChoice = {choice_value};\r\n    }, [choice_value]);\r\n\r\n    const choose_variant = (correct_answer, choice_value) => {\r\n        if (isAnswerClicked) {\r\n            if ((decodeURIComponent(correct_answer) === decodeURIComponent(choice_value))) {\r\n                return \"success\";\r\n            } else {\r\n                return \"danger\";\r\n            }\r\n        } else {\r\n            return \"outline-dark\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container style={{marginTop: 20, display: 'flex', justifyContent:'center', marginLeft: 30, width: '100%'}} >\r\n            {questions?.map((question, i) => (\r\n                <Grid item id=\"1\">\r\n                    <Card key={question} style={{marginTop: 20, marginRight: '100px'}}> \r\n                        <Card.Header> \r\n                            <Typography variant=\"h5\" style={{fontWeight: 'bold'}}> {decodeURIComponent(questions[i].category)}  \r\n                                <text style={{display: 'inline', justifyContent: 'right'}}> for {questionPoints} </text>\r\n                            </Typography>\r\n                        </Card.Header> \r\n                        <Card.Text style={{margin: 20}}> \r\n                            <Typography variant=\"subtitle1\" style={{fontWeight: 'bold'}}> {decodeURIComponent(questions[i].question)}  </Typography>\r\n                        </Card.Text>\r\n\r\n                        {(question.type === \"multiple\") ? (\r\n                            correct_answer = question.correct_answer,\r\n                            console.log(\"The correct answer : \" + correct_answer),\r\n\r\n                            <Grid container spacing={3} style={{display: 'flex', justifyContent: 'center', marginBottom: 20, marginRight: 30}} >\r\n                                <Grid item id={i}>\r\n                                    <ToggleButton variant={choose_variant()} value={choices[0]} onClick={(e) => setChoiceValue(choices[0])} className={classes.button}> {decodeURIComponent(choices[0])} </ToggleButton>\r\n                                    <ToggleButton variant=\"outline-dark\" value={choices[1]} onClick={(e) => setChoiceValue(choices[1])} className={classes.button}> {decodeURIComponent(choices[1])} </ToggleButton>\r\n                                    <ToggleButton variant=\"outline-dark\" value={choices[2]} onClick={(e) => setChoiceValue(choices[2])} className={classes.button}> {decodeURIComponent(choices[2])} </ToggleButton>\r\n                                    <ToggleButton variant=\"outline-dark\" value={choices[3]} onClick={(e) => setChoiceValue(choices[3])} className={classes.button}> {decodeURIComponent(choices[3])} </ToggleButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                            ) : (\r\n                                <Grid container spacing={3} style={{display: 'flex', justifyContent: 'center', marginBottom: 20}} >\r\n                                    <Grid item id={i}>\r\n                                        <ToggleButton variant={choose_variant()} value={true} onClick={(e) => setChoiceValue(true)} className={classes.button}> True </ToggleButton>\r\n                                        <ToggleButton variant={choose_variant()} value={false} onClick={(e) => setChoiceValue(false)} className={classes.button}> False </ToggleButton>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    </Card>,\r\n                    <Button variant=\"primary\" disabled={(choice_value) === '' ? true: false } onClick={() => confirmed(correct_answer)} style={{marginTop: 10}}> Submit </Button>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}