{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jhaymar\\\\Desktop\\\\Projects\\\\ReactJS\\\\trivia_junkie\\\\frontend\\\\src\\\\Components\\\\Sign-Up\\\\Sign-Up.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Card, CardHeader, CardContent, Button, CssBaseline, Divider, Container, FormControl, InputLabel, Input, FormHelperText } from '@mui/material';\nimport UserDataService from \"../../services/user\";\nimport useStyles from './styles';\nimport Header from '../Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const classes = useStyles();\n  const [fullName, setFullName] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email_address, setEmailAddress] = useState('');\n  const [isLogin, setLogin] = useState(false);\n\n  const saveUser = () => {\n    const newUser = {\n      fullName: fullName,\n      username: username,\n      password: password,\n      email_address: email_address\n    };\n    UserDataService.createUser(newUser).then(() => {\n      setLogin(true);\n    }).catch(e => {\n      console.log({\n        newUser\n      });\n      console.log(\"Error saving user: \" + {\n        e\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          xs: 12,\n          md: 12,\n          sx: {\n            mt: 10,\n            height: '45vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Create Account\",\n            sx: {\n              width: '100%',\n              height: '7vh',\n              display: 'flex',\n              textAlign: 'left',\n              ml: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              width: '100%',\n              mt: 3,\n              ml: 2\n            },\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              sx: {\n                width: '90%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"my-input\",\n                children: \"Full name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"fullName\",\n                value: fullName,\n                onChange: e => setFullName(e.target.value),\n                disableUnderline: true,\n                style: {\n                  width: '100%'\n                },\n                sx: {\n                  ml: 1.5\n                },\n                id: \"my-input\",\n                \"aria-describedby\": \"my-helper-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              width: '100%',\n              mt: 3,\n              ml: 2\n            },\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              sx: {\n                width: '90%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"my-input\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"username\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                disableUnderline: true,\n                style: {\n                  width: '100%'\n                },\n                sx: {\n                  ml: 1.5\n                },\n                id: \"my-input\",\n                \"aria-describedby\": \"my-helper-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              width: '100%',\n              mt: 3,\n              ml: 2\n            },\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              sx: {\n                width: '90%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"my-input\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"password\",\n                type: \"password\",\n                value: password,\n                onChange: e => {\n                  setPassword(e.target.value);\n                },\n                disableUnderline: true,\n                style: {\n                  width: '100%'\n                },\n                sx: {\n                  ml: 1.5\n                },\n                id: \"my-input\",\n                \"aria-describedby\": \"my-helper-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              width: '100%',\n              mt: 3,\n              ml: 2\n            },\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              sx: {\n                width: '90%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"my-input\",\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"email_address\",\n                value: email_address,\n                onChange: e => setEmailAddress(e.target.value),\n                disableUnderline: true,\n                style: {\n                  width: '100%'\n                },\n                sx: {\n                  ml: 1.5\n                },\n                id: \"my-input\",\n                \"aria-describedby\": \"my-helper-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            mt: 2\n          },\n          variant: \"contained\",\n          onClick: () => saveUser(fullName, username, password, email_address),\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignUp, \"56lZsoWO3PT32InJ1uHBcVjRDDA=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Jhaymar/Desktop/Projects/ReactJS/trivia_junkie/frontend/src/Components/Sign-Up/Sign-Up.jsx"],"names":["React","useState","useEffect","Box","Card","CardHeader","CardContent","Button","CssBaseline","Divider","Container","FormControl","InputLabel","Input","FormHelperText","UserDataService","useStyles","Header","SignUp","classes","fullName","setFullName","username","setUsername","password","setPassword","email_address","setEmailAddress","isLogin","setLogin","saveUser","newUser","createUser","then","catch","e","console","log","mt","height","width","display","textAlign","ml","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Box, Card, CardHeader, CardContent, Button, CssBaseline, Divider, Container, FormControl, InputLabel, Input, FormHelperText} from '@mui/material';\r\nimport UserDataService from \"../../services/user\";\r\n\r\nimport useStyles from './styles';\r\nimport Header from '../Header/Header';\r\n\r\nconst SignUp = () => {\r\n    const classes = useStyles();\r\n    const [fullName, setFullName] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email_address, setEmailAddress] = useState('');\r\n    const [isLogin, setLogin] = useState(false);\r\n\r\n\r\n    const saveUser = () => {\r\n        const newUser = {\r\n            fullName: fullName,\r\n            username: username,\r\n            password: password,\r\n            email_address: email_address,\r\n        }\r\n\r\n         UserDataService.createUser(newUser)\r\n            .then(() => {\r\n                setLogin(true)\r\n            })\r\n            .catch(e => {\r\n                console.log({newUser})\r\n                console.log(\"Error saving user: \" + {e});\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <Container maxWidth=\"sm\">\r\n                    <Card xs={12} md={12} sx={{mt: 10, height: '45vh'}} >\r\n                        <CardHeader title=\"Create Account\" sx={{width: '100%', height: '7vh', display: 'flex', textAlign: 'left', ml: 1}}/>\r\n                        <Divider />\r\n                        <FormControl sx={{width: '100%', mt: 3, ml: 2}} required={true}>\r\n                            <Card variant=\"outlined\" sx={{width: '90%'}}>\r\n                                <InputLabel htmlFor=\"my-input\">Full name</InputLabel>\r\n                                <Input name=\"fullName\" value={fullName} onChange={(e) => setFullName(e.target.value)} disableUnderline={true} style={{width: '100%'}} sx={{ml: 1.5}} id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n                            </Card>\r\n                        </FormControl>\r\n                        <div />\r\n                        <FormControl sx={{width: '100%', mt: 3, ml: 2}} required={true}>\r\n                            <Card variant=\"outlined\" sx={{width: '90%'}}>\r\n                                <InputLabel htmlFor=\"my-input\">Username</InputLabel>\r\n                                <Input id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} disableUnderline={true} style={{width: '100%'}} sx={{ml: 1.5}} id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n                            </Card>\r\n                        </FormControl>\r\n                        <div> </div> \r\n                        <FormControl sx={{width: '100%', mt: 3, ml: 2}} required={true}>\r\n                            <Card variant=\"outlined\" sx={{width: '90%'}}>\r\n                                <InputLabel htmlFor=\"my-input\">Password</InputLabel>\r\n                                <Input id=\"password\" type=\"password\" value={password} onChange={(e) => {setPassword(e.target.value)}} disableUnderline={true} style={{width: '100%'}} sx={{ml: 1.5}} id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n                            </Card>\r\n                        </FormControl>\r\n                        <div />\r\n                        <FormControl sx={{width: '100%', mt: 3, ml: 2}} required={true}>\r\n                            <Card variant=\"outlined\" sx={{width: '90%'}}>\r\n                                <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\r\n                                <Input id=\"email_address\" value={email_address} onChange={(e) => setEmailAddress(e.target.value)}disableUnderline={true} style={{width: '100%'}} sx={{ml: 1.5}} id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n                            </Card>\r\n                        </FormControl>\r\n                    </Card>\r\n                    <Button sx={{mt: 2}} variant=\"contained\" onClick={() => saveUser(fullName, username, password, email_address)}> Submit </Button>\r\n                </Container>\r\n            </React.Fragment>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}